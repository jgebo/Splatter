@model Splatter.Models.TicketAttachment

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>

@using (Html.BeginForm("Details", "TicketAttachments", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TicketAttachment</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Id)
        @Html.HiddenFor(model => model.FilePath)
        @Html.HiddenFor(model => model.TicketId)
        @Html.HiddenFor(model => model.Created)
        @Html.HiddenFor(model => model.UserName)

        <div class="form-group">
            @Html.LabelFor(model => model.TicketId, "Title", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Ticket.Title, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.TicketId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Description, new { htmlAttributes = new { @class = "form-control", disabled  = "disabled" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Created, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Created, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Created, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.UserName, "UserName", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(modle => modle.UserName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.UserName, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.FileUrl, "Current File", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.FileUrl, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.FileUrl, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}
@if (User.IsInRole("Administrator"))
{
    <p>
        @Html.ActionLink("Back to Ticket ", "Details", "Tickets", new { id = Model.TicketId }, null) |
        @Html.ActionLink(" Edit ", "Edit", new { id = Model.Id }) |
        @Html.ActionLink(" Attachments Index", "Index") 
    </p>
}
else
{
    <div>
        @Html.ActionLink("Back to Ticket ", "Details", "Tickets", new { id = Model.TicketId }, null) |
        @Html.ActionLink(" Edit", "Edit", new { id = Model.Id })
    </div>
}