@model Splatter.Models.UserRolesViewModel

@{
    ViewBag.Title = "UsersInRole";
}

<h2>Users In Role</h2>

@using (Html.BeginForm("UsersInRole", "UserRoles", FormMethod.Post, new { encType = "fmultipart/form-data", name = "myform" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <hr />
        @Html.HiddenFor(m => m.RoleId)
        @Html.HiddenFor(m => m.RoleName)
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        <div class="form-group">
            @Html.LabelFor(model => model.RoleName, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.RoleName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.RoleName, "", new { @class = "text-danger" })
            </div>
        </div>
 
        <div class="form-group">
            @Html.LabelFor(model => model.Users, "Users", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.ListBoxFor(model => model.SelectedUsers, Model.Users as MultiSelectList, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Users, "", new { @class = "text-danger" })
            </div>
        </div>
 
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Remove User(s)" class="btn btn-danger" />
            </div>
        </div>
    </div>
}

    <div>
        @Html.ActionLink("Back to List", "Index","Roles")
    </div>
