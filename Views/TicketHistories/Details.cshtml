@model Splatter.Models.TicketHistory

@{
    ViewBag.Title = "Details";
}

<h2>Details</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>TicketHistory</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
      
        <div class="form-group">
            @Html.LabelFor(model => model.Property, "Ticket Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Property, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Property, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.OldValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.OldValue, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.OldValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.NewValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.NewValue, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.NewValue, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Changed, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Changed, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.Changed, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.BTUser.DisplayName, "User Name", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.BTUser.DisplayName, new { htmlAttributes = new { @class = "form-control", disabled = "disabled" } })
                @Html.ValidationMessageFor(model => model.BTUser.DisplayName, "", new { @class = "text-danger" })
            </div>
        </div>
    </div>
}

@if (User.IsInRole("Administrator"))
{
    <p>
        @Html.ActionLink("Back to Tickets ", "Details", "Tickets", new { id = Model.TicketId }, null) |
        @Html.ActionLink(" History Index", "Index")
    </p>
}
else
{
    <div>
        @Html.ActionLink("Back to Tickets ", "Details", "Tickets", new { id = Model.TicketId }, null) |
    </div>
}